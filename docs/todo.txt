TODO

- layers and frames!  8x8 grid of 3 layers
-- blank w/ "hello!" in different spots on each layer
- make this animate w/ 4 frames
-- frames color cycle
-- bind < and > to back/forward frame
- write this to a file with json.dump(string(?))
- read this from a file with json.load(file)

---

second design approach

art stores no intermediate lists, just arrays of ints for char, fg & bg colors
shader does the rest!
compute char UV in the vert shader
get fg and bg colors from index by sampling from a 1D palette texture
pass in texture dimensions as uniforms (2 bits of data that don't change per object)
art's get and set methods compute index into array and return/set directly
no layer or frame objects!  an Art keeps lists of em, and a few lists for data that used to live in each instance eg frame delay and layer Z.
