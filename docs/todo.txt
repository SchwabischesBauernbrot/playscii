TODO

quake style console:
- bonus: slides down and fades in when invoked reverse when dismissed - add "overall alpha" uniform to renderable_f.glsl
- input lines are first checked for special command status (eg save), if not found then try to eval() the expression and print result to console

status bar:
- selected character, fg/bg color in status bar, c/shift-c to cycle char, etc
- draw selected char and colors in current art's charset + palette - support for UI elements (ie draw in screen space) that use alt charsets/palettes
-- how to get this drawing at the right size in the status bar even though the characters are of different size?  (tweak quad size for colors, determine an appropriate quad size for char)

- shift-U: toggle UI drawing

- get cursor working
-- move with arrow keys
-- screen-to-3D for mouse pointer
-- [ ] shift active edited layer?
-- draw grid at Z of currently active layer
?? does edit mode always force straight top down and/or ortho view? or can the cursor work in a 3D scene a la an RTS?

- "export to PNG" feature - how? 1:1 sized offscreen render target? does getting pixels from framebuffer preserve alpha?
-- is color distortion inherent in how good CRT filters work?


---

FIX:

- headbrain2.ed is corrupted, figure out if it can be salvaged with smart parsing - maybe provide a "width override" option?

problem discovered during 2015-01-04~06:
GLSL really can't handle int/uint attributes!  charIndex looks fine in numpy int32 array data but comes into GLSL totally screwy.  works fine when the array and attribute are floats instead.  bug for PyOpenGL devs?
possible test program: two quads side by side, each doing some trivial shader that involves an arbitrary number, only difference being one is driven by an int attribute and the other by a float.
